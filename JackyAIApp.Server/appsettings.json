{
  "ConnectionStrings": {
    "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=JackyAIDB;Trusted_Connection=True;MultipleActiveResultSets=true",
    "SQLConnection": "Server=(localdb)\\mssqllocaldb;Database=JackyAIDB;Trusted_Connection=True;MultipleActiveResultSets=true"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "NLog": {
    "autoReload": true,
    "throwConfigExceptions": true,
    "internalLogLevel": "Info",
    "internalLogFile": "c:/temp/internal-nlog-AspNetCore.txt",
    "extensions": [
      { "assembly": "NLog.Extensions.Logging" },
      { "assembly": "NLog.Web.AspNetCore" },
      { "assembly": "NLog.MailKit" }
    ],
    "variables": {
      "var_logdir": "c:/temp"
    },
    "time": {
      "type": "AccurateUTC"
    },
    "default-wrapper": {
      "type": "AsyncWrapper",
      "overflowAction": "Block"
    },
    "targets": {
      "all-file": {
        "type": "File",
        "fileName": "c:/temp/nlog-all-${shortdate}.log",
        "layout": "${longdate} |${event-properties:item=EventId:whenEmpty=0}| ${level:uppercase=true} | ${logger} | ${message} | ${exception:format=tostring}"
      },
      "own-file-web": {
        "type": "File",
        "fileName": "c:/temp/nlog-own-${shortdate}.log",
        "layout": "${longdate} |${event-properties:item=EventId:whenEmpty=0}| ${level:uppercase=true} | ${logger} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url} | action: ${aspnet-mvc-action}"
      },
      "own-console": {
        "type": "LimitingWrapper",
        "interval": "00:00:01",
        "messageLimit": 100,
        "target": {
          "type": "ColoredConsole",
          "layout": "${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}",
          "rowHighlightingRules": [
            {
              "condition": "level == LogLevel.Error",
              "foregroundColor": "Red"
            },
            {
              "condition": "level == LogLevel.Fatal",
              "foregroundColor": "Red",
              "backgroundColor": "White"
            }
          ],
          "wordHighlightingRules": [
            {
              "regex": "on|off",
              "foregroundColor": "DarkGreen"
            },
            {
              "condition": "level == LogLevel.Debug",
              "text": "[TEST]",
              "foregroundColor": "Blue"
            }
          ]
        }
      },
      "mail": {
        "type": "AutoFlushWrapper",
        "condition": "level >= LogLevel.Error",
        "flushOnConditionOnly": true,
        "target": {
          "type": "BufferingWrapper",
          "bufferSize": 31,
          "overflowAction": "Discard",
          "target": {
            "type": "Mail",
            "layout": "${longdate:universalTime=true} [${threadid}] ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}",
            "addNewLines": true,
            "subject": "[Jacky AI App] Execption",
            "smtpServer": "smtp.gmail.com",
            "smtpPort": 587,
            "smtpAuthentication": "Basic",
            "smtpUserName": "",
            "smtpPassword": "",
            "to": "",
            "from": "",
            "secureSocketOption": "StartTls"
          }
        }
      }
    },
    "rules": [
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "all-file"
      },
      {
        "logger": "Microsoft.Hosting.Lifetime",
        "minLevel": "Info",
        "writeTo": "own-file-web",
        "final": true
      },
      {
        "logger": "Microsoft.*",
        "maxLevel": "Info",
        "final": true
      },
      {
        "logger": "System.Net.Http.*",
        "maxLevel": "Info",
        "final": true
      },
      {
        "logger": "*",
        "minLevel": "Debug",
        "writeTo": "own-console",
        "filterDefaultAction": "Log",
        "filters": {
          "whenRepeated": {
            "layout": "${message}",
            "action": "Ignore"
          }
        }
      },
      {
        "logger": "*",
        "minLevel": "Info",
        "writeTo": "mail"
      },
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "own-file-web"
      }
    ]
  },
  "KeyVaultName": "jackyaiappkeyvault",
  "Settings": {
    "Google": {
      "ClientId": "",
      "ClientSecret": "",
      "CallbackPath": ""
    },
    "OpenAI": {
      "Key": ""
    },
    "DifyApiKey": "",
    "AzureCosmosDatabaseName": "JackyAIDB"
  }
}
